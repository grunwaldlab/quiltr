% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/chapter_01--introduction--define_quilt.R
\name{quilt}
\alias{quilt}
\title{Renders the contents of folder(s) into a sharable form.}
\usage{
quilt(path = getwd(), output_format = "website", output_path = NULL,
  output_name = NULL, overwrite = FALSE, config_name = "quilt_config",
  config_path = path, config_search_type = c("root", "children"),
  file_search_type = c("root", "children"))
}
\arguments{
\item{path}{(\code{character} of length 1)  [not path-specific or output-specific]
A path a to folder in which to look for files to display in the output.
This also determines the default place to look for configuration files.
A configuration file in \code{path} can modify the path before is it used to find content
and configuration files for local options.
Although only one path can be specified in the function call, it can be modified to multiple
paths in configuration files.}

\item{output_format}{(\code{character}) [not path-specific or output-specific]
The type of output to generate.
Each output type is associated with a renderer function.
The following output types are supported:
\describe{
  \item{\code{"website"}}{
    A set of HTML files linked together by a shared hierarchical menu.
    File content is rendered as HTML and displayed using iframes.
  }
  \item{\code{"book"}}{
    IN DEVLOPMENT
    A single book-style pdf document containing file content rendered as pdf.
  }
  \item{\code{"figure"}}{
    IN DEVLOPMENT
    A single image file containing a scematic of input folder structure.
  }
}

Output-type-specific option values can be specified in configuration files.
To make multiple outputs of the same type, with potentailly differnt options, supply a named character vector.
The names are used to identify corresponding output-specific options values in configuration files.
For example, \code{output_format = c("pubic" = "website", "private" = "website")} would create two websites;
Option names prefixed with \code{"public."} in configuration files, would only apply to the "public" website.}

\item{output_path}{(\code{character} of length 1) [not path-specific]
Path to folder in which to write the output file/folder.
If \code{NULL} or \code{NA}, a temporary directory will be used.}

\item{output_name}{(\code{character} of length 1) [not path-specific]
The name of the output file/folder.
The name of the \code{output_format} will be appended onto this name to allow for multiple outputs at once.}

\item{overwrite}{(\code{logical} of length 1) If \code{TRUE}, an existing directory with the
same name as an output directory will be overwritten.}

\item{config_name}{(\code{character} of length 1) [not path-specific]
The name of configuration files to use.
They can be anywhere in directories under \code{config_path}.
Configuration files are in YAML or R format and specify the values of options for this function.
Options that are file-path-specific (e.g. \code{type}) can take the form of named lists,
where names are file paths relative to the location of the configuration file
(possibly with \code{*} or \code{**} wildcards) and values are the option values relevant
to the paths specified in the names.
Path-specific options can be specified by configuraion files anywhere in the target
directory, not just the root specified by \code{path}.
Only some of this function's options are file-path-specific; those that are not
(e.g. \code{output}) can be specified by values in a configuration file in \code{path}.
To ignore website configuartion files, set this option to \code{NA} or \code{NULL}.}

\item{config_path}{(\code{character} of length 1) [not path-specific]
Path to a folder in which to look for a configuration file with name specified by \code{config_name}.
The default is the value of \code{path} given during the function call.
This only applies to global options is not effected by \code{config_search_type}.
To ignore website configuartion files, set this option to \code{NA} or \code{NULL}.}

\item{config_search_type}{(\code{character}) [not path-specific]
Where to look for configuration files relative to \code{path}.
Only applies to local options and is not affected by \code{config_path}.

Accepts one or more of the following values:

\describe{
  \item{parents}{Files in parent folders of \code{path}}
  \item{root}{Files in \code{path}}
  \item{children}{Files in child folders of \code{path}}
}

By default, this option is set to c("root", "children").
This means that all configuration files in \code{path} and any subfolder will be used when determining values for local options.
To ignore website configuartion files, set this option to \code{NA} or \code{NULL}.}
}
\value{
(\code{character} of same length as \code{output_format})
The file path to the output file(s)/folder(s).
}
\description{
Currently, the only output type is a static website.
The content of files in target folder(s) can be displayed in the output or accessed by links.
Rmarkdown and some programming languages can be executed and their output included.
The organization of the output website is derived from file/folder names or configuration files.
This function's options are best specified with configuration files rather than passing values
to the function itself.
See the \code{config_name} option documentation for how to use configuration files.
It is possible to do much more with configuration files than with arguments specified during the
function call.
}
\section{Configuration files}{

Configuration files are used to store option values in the folders they apply to.
They can be anywhere in directories under \code{config_path} (\code{path} by default).
Configuration files are in YAML or R format and specify the values of options for this function.
Options that are file-path-specific (e.g. \code{type}) can take the form of named lists,
where names are file paths relative to the location of the configuration file
(possibly with \code{*} or \code{**} wildcards) and values are the option values relevant
to the paths specified in the names.
File-path-specific options can be specified by configuraion files anywhere in the target
directory, not just the root specified by \code{path}.
Only some of this function's options are file-path-specific; those that are not
(e.g. \code{output}) can be specified by values in a configuration file in \code{path}.
This is the only option that cannot be specified by a configuration file.
To ignore website configuartion files, set this option to \code{NA} or \code{NULL}.
}

\section{Renderable file types}{

To see the list of file types that can be rendered, execute \code{formats_quilt_can_render()}.
All files types specified by \code{type} in \code{path} will be included.
Code is displayed using syntax highlighting if pandoc is installed.
}
\examples{
\dontrun{

# Make website out of the current working directory
quilt()

# Create a template directory in the current
# working directory and make a website from it
make_quiltr_template(getwd(), "default")
quilt("default")
}
}

